<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Age" xml:space="preserve">
    <value>Os anos</value>
  </data>
  <data name="Businesscellphone.Text" xml:space="preserve">
    <value>Tel 1:</value>
  </data>
  <data name="BusinessCityEmpty.Text" xml:space="preserve">
    <value>O nome do endereço comercial na cidade náo está preenchida</value>
  </data>
  <data name="BusinessCountryEmpty.Text" xml:space="preserve">
    <value>O nome do endereço comercial no país náo está preenchida</value>
  </data>
  <data name="Businessphone.Text" xml:space="preserve">
    <value>Tel 2:</value>
  </data>
  <data name="comboBoxTypeOfActivity.Text" xml:space="preserve">
    <value>Selecione um domínio de actividade …</value>
  </data>
  <data name="CompulsorySavings.Text" xml:space="preserve">
    <value>A poupança obrigatória</value>
  </data>
  <data name="DateOfBirthEmpty.Text" xml:space="preserve">
    <value>A data de nascimento não pode ser o dia actual</value>
  </data>
  <data name="deleteDoc.Text" xml:space="preserve">
    <value>Tem a certeza de que quer apagar o documento selecionado?</value>
  </data>
  <data name="EconomicActivityEmpty.Text" xml:space="preserve">
    <value>Atividade econômica está vazia</value>
  </data>
  <data name="ExperienceEmpty.Text" xml:space="preserve">
    <value>A experiência não está preenchida</value>
  </data>
  <data name="Homephone.Text" xml:space="preserve">
    <value>O telefone de casa</value>
  </data>
  <data name="HouseSizeEmpty.Text" xml:space="preserve">
    <value>O tamanho da casa não está preenchida</value>
  </data>
  <data name="HouseTimeLivingInEmpty.Text" xml:space="preserve">
    <value>A duração do tempo de estadia nesta casa não está preenchido</value>
  </data>
  <data name="IdentificationDataEmpty.Text" xml:space="preserve">
    <value>Os dados de identificação não estã preenchidos</value>
  </data>
  <data name="labelAmountAndCycleCaracteristics.Text" xml:space="preserve">
    <value>e</value>
  </data>
  <data name="labelAmountBeetweenCycleCaracteristics.Text" xml:space="preserve">
    <value>entre</value>
  </data>
  <data name="LandPlotSizeEmpty.Text" xml:space="preserve">
    <value>O tamanho da parcela de terreno não está preenchido</value>
  </data>
  <data name="LivestockKindOfAnimalEmpty.Text" xml:space="preserve">
    <value>O tipo de gado náo está preenchido</value>
  </data>
  <data name="LivestockNumberEmpty.Text" xml:space="preserve">
    <value>O número de cabeças de gado não está preenchido</value>
  </data>
  <data name="messageBoxErrors.Text" xml:space="preserve">
    <value>Os erros</value>
  </data>
  <data name="messageBoxPersonSaved.Text" xml:space="preserve">
    <value>A pessoa salva</value>
  </data>
  <data name="MonthlyExpenditureEmpty.Text" xml:space="preserve">
    <value>A quantia da despesas mensais não estão preenchidas</value>
  </data>
  <data name="MonthlyIncomeEmpty.Text" xml:space="preserve">
    <value>A renda mensal não está preenchida</value>
  </data>
  <data name="NameEmpty.Text" xml:space="preserve">
    <value>O nome não está preenchido</value>
  </data>
  <data name="OtherOrganizationNameEmpty.Text" xml:space="preserve">
    <value> O campo "Outra Organização" não está preenchido</value>
  </data>
  <data name="Personalphone.Text" xml:space="preserve">
    <value>O telefone pessoal</value>
  </data>
  <data name="PrivateAddressEmpty.Text" xml:space="preserve">
    <value>O endereço pessoal não está preenchido</value>
  </data>
  <data name="PrivateCityEmpty.Text" xml:space="preserve">
    <value>O nome da cidade no endereço pessoal não  está preenchida</value>
  </data>
  <data name="PrivateCountryEmpty.Text" xml:space="preserve">
    <value>O nome do país no endereço pessoal não está preenchida</value>
  </data>
  <data name="SavingsBook.Text" xml:space="preserve">
    <value>A caderneta de poupança</value>
  </data>
  <data name="SavingsDeposit.Text" xml:space="preserve">
    <value>O depósito de poupanças</value>
  </data>
  <data name="SexEmpty.Text" xml:space="preserve">
    <value>O sexo (Masculino ou Feminino) náo está preenchido</value>
  </data>
  <data name="sexF.Text" xml:space="preserve">
    <value>Feminino</value>
  </data>
  <data name="sexM.Text" xml:space="preserve">
    <value>Masculino</value>
  </data>
  <data name="textBoxDateOfBirth.Text" xml:space="preserve">
    <value>DD / MM / AAA</value>
  </data>
  <data name="textErrorDateOfBirthIsEmpty.Text" xml:space="preserve">
    <value>A data de nascimento não está preenchida</value>
  </data>
  <data name="textErrorDistrictIsEmpty.Text" xml:space="preserve">
    <value>O distrito não está preenchido</value>
  </data>
  <data name="textErrorEconomicActivityIsEmpty.Text" xml:space="preserve">
    <value>A actividade econômica não está preenchida</value>
  </data>
  <data name="textErrorExperienceIsEmpty.Text" xml:space="preserve">
    <value>A experiência não está preenchida</value>
  </data>
  <data name="textErrorIdDataIsEmpty.Text" xml:space="preserve">
    <value>Os dados de identificação não estão preenchidos</value>
  </data>
  <data name="textErrorMonthlyExpenditureIsEmpty.Text" xml:space="preserve">
    <value>As despesas mensais não estão preenchidas</value>
  </data>
  <data name="textErrorMonthlyIncomeIsEmpty.Text" xml:space="preserve">
    <value>A renda mensal não está preenchida</value>
  </data>
  <data name="textErrorNameIsEmpty.Text" xml:space="preserve">
    <value>O nome não está preenchido</value>
  </data>
  <data name="textErrorSexIsEmpty.Text" xml:space="preserve">
    <value>O sexo (Masculino, Feminino) não está preenchido</value>
  </data>
  <data name="textErrorVillageIsEmpty.Text" xml:space="preserve">
    <value>O nom da aldeia não está preenchida</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Actualizar</value>
  </data>
</root>