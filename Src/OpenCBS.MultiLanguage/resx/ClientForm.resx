<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ContractSaved" xml:space="preserve">
    <value>Contract has been saved.</value>
  </data>
  <data name="ContractUpdated" xml:space="preserve">
    <value>Contract has been updated.</value>
  </data>
  <data name="GroupEmptyWarning.Caption" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="Corporate.Text" xml:space="preserve">
    <value>Corporate</value>
  </data>
  <data name="DateOfAgreement.Text" xml:space="preserve">
    <value>Date of agreement</value>
  </data>
  <data name="EconomicActivity.Text" xml:space="preserve">
    <value>Economic activity</value>
  </data>
  <data name="EmployeesNumber.Text" xml:space="preserve">
    <value>Employees number</value>
  </data>
  <data name="Group.Text" xml:space="preserve">
    <value>Group</value>
  </data>
  <data name="Bad.Text" xml:space="preserve">
    <value> (Bad client)</value>
  </data>
  <data name="IdentifyCompanyNumber.Text" xml:space="preserve">
    <value>Identify company number</value>
  </data>
  <data name="InsertionType.Text" xml:space="preserve">
    <value>Insertion type</value>
  </data>
  <data name="labelGuaranteeIsActive.Text" xml:space="preserve">
    <value>This guarantee is active</value>
  </data>
  <data name="LegalForm.Text" xml:space="preserve">
    <value>Legal form</value>
  </data>
  <data name="LegalInscription.Text" xml:space="preserve">
    <value>Legal inscription</value>
  </data>
  <data name="Person.Text" xml:space="preserve">
    <value>Person</value>
  </data>
  <data name="Project.Text" xml:space="preserve">
    <value>Project</value>
  </data>
  <data name="SaveProject.Text" xml:space="preserve">
    <value>Save project</value>
  </data>
  <data name="UpdateProject.Text" xml:space="preserve">
    <value>Update project</value>
  </data>
  <data name="VolunteersNumber.Text" xml:space="preserve">
    <value>Volunteers number</value>
  </data>
  <data name="buttonSave.Text" xml:space="preserve">
    <value>Update corporate</value>
  </data>
  <data name="NotSet.Text" xml:space="preserve">
    <value>Not Set</value>
  </data>
  <data name="ContractIsReadOnly.Text" xml:space="preserve">
    <value>Warning! Contract's funding line is empty. Contract is available only in ReadOnly mode. Please, ask your administrator to change empty parameters.</value>
  </data>
  <data name="CapitalDue.Text" xml:space="preserve">
    <value>OLB:</value>
  </data>
  <data name="PercentsDue.Text" xml:space="preserve">
    <value>Interests due:</value>
  </data>
  <data name="Status.Text" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="Currency.Text" xml:space="preserve">
    <value>Currency: </value>
  </data>
  <data name="GroupEmptyWarning.Text" xml:space="preserve">
    <value>You cannot save the contract since the group has no members.</value>
  </data>
  <data name="CompulsorySavings.Text" xml:space="preserve">
    <value>Mandatory Savings</value>
  </data>
  <data name="SavingsActive.Text" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="SavingsBook.Text" xml:space="preserve">
    <value>Savings Book</value>
  </data>
  <data name="SavingsClosed.Text" xml:space="preserve">
    <value>Closed</value>
  </data>
  <data name="SavingsDeposit.Text" xml:space="preserve">
    <value>Savings Deposit</value>
  </data>
  <data name="RolloverNone.Text" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="RolloverPrincipal.Text" xml:space="preserve">
    <value>Principal</value>
  </data>
  <data name="RolloverPrincipalAndInterests.Text" xml:space="preserve">
    <value>Principal and Interests</value>
  </data>
  <data name="lblEarlyRepaimentBaseInterest.Text" xml:space="preserve">
    <value>% of interest</value>
  </data>
  <data name="lblEarlyRepaimentBaseOLB.Text" xml:space="preserve">
    <value>% of OLB</value>
  </data>
  <data name="LateFeesGracePeriod.Text" xml:space="preserve">
    <value>Late Fees - Grace Period</value>
  </data>
  <data name="ContractHasPendingInstallment.Text" xml:space="preserve">
    <value>Contract has pending installment</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="ConfirmCancelLastEvent" xml:space="preserve">
    <value>Are you sure you want to cancel last operation?</value>
  </data>
  <data name="cannotView" xml:space="preserve">
    <value>You do not have permissions to open this contract.</value>
  </data>
  <data name="save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="BalanceIsNotEnough" xml:space="preserve">
    <value>The balance on savings account of {0} is not enough to cover total loans amount percentage of {1}.</value>
  </data>
  <data name="CumpolsorySavingIsMandatory" xml:space="preserve">
    <value>Please attach a mandatory savings account for this loan.</value>
  </data>
  <data name="LoanRequiresCompulsory" xml:space="preserve">
    <value>This loan requires a mandatory savings account to be disbursed.</value>
  </data>
  <data name="ParametersAreWrong" xml:space="preserve">
    <value>Some parameters are wrong. Please check them and try again.</value>
  </data>
  <data name="CompulsorySavingDetail.Text" xml:space="preserve">
    <value>Please, select mandatory savings</value>
  </data>
  <data name="CollateralAmountIsNotEnough" xml:space="preserve">
    <value>Collateral amount should cover at least amount of {0}, which is {1}% of the loan amount! Please review your collaterals!</value>
  </data>
  <data name="CollateralGuarantorAmountIsNotEnough" xml:space="preserve">
    <value>Collaterals + guarantors amount should cover at least amount of {0}, which is {1}% of the loan amount! Please review your guarantors and collaterals!</value>
  </data>
  <data name="GuarantorAmountIsNotEnough" xml:space="preserve">
    <value>Guarantor amount should cover at least amount of {0}, which is {1}% of the loan amount! Please review your guarantors!</value>
  </data>
  <data name="SavingsAccountHasActiveLoans" xml:space="preserve">
    <value>This savings account cannot be closed due to the active loans connected to it.</value>
  </data>
  <data name="SavingsAccountHasPendingEvents" xml:space="preserve">
    <value>This account cannot be closed! It has pending event!</value>
  </data>
  <data name="DeleteCumpolsorySavingsFromLoan" xml:space="preserve">
    <value>Are you sure you want to delete mandatory savings from this loan account?</value>
  </data>
  <data name="TotalEntryFees" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="DeleteCollateralFromLoan" xml:space="preserve">
    <value>Are you sure you want to delete collateral from this loan account?</value>
  </data>
  <data name="NonSolidaryGroup" xml:space="preserve">
    <value>Village Bank</value>
  </data>
  <data name="SavingsPending.Text" xml:space="preserve">
    <value>Pending</value>
  </data>
  <data name="lblEarlyRepaimentBasePrincipal.Text" xml:space="preserve">
    <value>% of principal</value>
  </data>
  <data name="ConfirmWriteOff.Text" xml:space="preserve">
    <value>Are you sure you want to write off contract?</value>
  </data>
  <data name="Abandoned.Text" xml:space="preserve">
    <value>Abandoned</value>
  </data>
  <data name="Active.Text" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="Closed.Text" xml:space="preserve">
    <value>Closed</value>
  </data>
  <data name="Pending.Text" xml:space="preserve">
    <value>Pending</value>
  </data>
  <data name="Refused.Text" xml:space="preserve">
    <value>Refused</value>
  </data>
  <data name="Validated.Text" xml:space="preserve">
    <value>Validated</value>
  </data>
  <data name="WrittenOff.Text" xml:space="preserve">
    <value>Written-off</value>
  </data>
  <data name="WaiveFee.Text" xml:space="preserve">
    <value>Do you want to waive late fees for latest repayment?</value>
  </data>
  <data name="CompulsorySavingNotSelected.Text" xml:space="preserve">
    <value>Not selected</value>
  </data>
  <data name="Postponed.Text" xml:space="preserve">
    <value>Postponed</value>
  </data>
  <data name="No.Text" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="Yes.Text" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="Deleted.Text" xml:space="preserve">
    <value>Deleted</value>
  </data>
  <data name="NonAccrual.Text" xml:space="preserve">
    <value>Non-accrual</value>
  </data>
</root>