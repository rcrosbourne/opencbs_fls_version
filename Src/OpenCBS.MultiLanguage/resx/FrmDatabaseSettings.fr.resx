<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AdditionalColumns.Text" xml:space="preserve">
    <value>AdditionalColumns</value>
  </data>
  <data name="Backup.Text" xml:space="preserve">
    <value>Sauvegarder</value>
  </data>
  <data name="BackupCancelled.Text" xml:space="preserve">
    <value>La sauvegarde de la base de données est annulée</value>
  </data>
  <data name="BackUpDatabase.Text" xml:space="preserve">
    <value>Sauvegarde de la base</value>
  </data>
  <data name="BackupFailed.Text" xml:space="preserve">
    <value>La sauvegarde a échoué!</value>
  </data>
  <data name="BranchCode.Text" xml:space="preserve">
    <value>Code de la branche</value>
  </data>
  <data name="ConnectionWasNotMade.Text" xml:space="preserve">
    <value>La connexion à SQL Server a échoué ! Vérifiez les paramètres.</value>
  </data>
  <data name="CorrectLabels.Text" xml:space="preserve">
    <value>Corrigez les labels en rouge.</value>
  </data>
  <data name="Created.Text" xml:space="preserve">
    <value>a été créée avec succès</value>
  </data>
  <data name="CreationFailed.Text" xml:space="preserve">
    <value>La création de la base de données a échoué</value>
  </data>
  <data name="Database.Text" xml:space="preserve">
    <value>Base de données</value>
  </data>
  <data name="DatabaseCreation.Text" xml:space="preserve">
    <value>Création de la base de données en cours...</value>
  </data>
  <data name="DatabaseCreationCancelled.Text" xml:space="preserve">
    <value>Création de la base de données annulée</value>
  </data>
  <data name="Databases.Text" xml:space="preserve">
    <value>Bases de données</value>
  </data>
  <data name="DefaultDatabase.Text" xml:space="preserve">
    <value>est maintenant la base de données par défaut</value>
  </data>
  <data name="InProgress.Text" xml:space="preserve">
    <value>en cours...</value>
  </data>
  <data name="Login.Text" xml:space="preserve">
    <value>Utilisateur</value>
  </data>
  <data name="MissingColumns.Text" xml:space="preserve">
    <value>Colonnes manquantes</value>
  </data>
  <data name="Password.Text" xml:space="preserve">
    <value>Mot de passe</value>
  </data>
  <data name="RestoreCancelled.Text" xml:space="preserve">
    <value>Restauration de la base de données annulée</value>
  </data>
  <data name="RestoreDatabase.Text" xml:space="preserve">
    <value>La base de données</value>
  </data>
  <data name="RestoreFailed.Text" xml:space="preserve">
    <value>La restauration de la base de données a échoué</value>
  </data>
  <data name="SelectDatabase.Text" xml:space="preserve">
    <value>Sélectionnez une base dans la liste ci-dessus</value>
  </data>
  <data name="SelectInList.Text" xml:space="preserve">
    <value>Sélectionnez une base dans la liste ci-dessus</value>
  </data>
  <data name="Server.Text" xml:space="preserve">
    <value>Serveur</value>
  </data>
  <data name="Size.Text" xml:space="preserve">
    <value>Taille</value>
  </data>
  <data name="StructureConforms.Text" xml:space="preserve">
    <value>La structure de la base est conforme à la version du logiciel</value>
  </data>
  <data name="Successful.Text" xml:space="preserve">
    <value>a été restaurée avec succès</value>
  </data>
  <data name="To.Text" xml:space="preserve">
    <value>Vers</value>
  </data>
  <data name="UpdateDBFrom.Text" xml:space="preserve">
    <value>Mise à jour de la base de données depuis</value>
  </data>
  <data name="UpdatingDatabase.Text" xml:space="preserve">
    <value>Votre base de données est en train d'être mise à jour, veuillez patienter</value>
  </data>
  <data name="Upgrade.Text" xml:space="preserve">
    <value>Mise à jour</value>
  </data>
  <data name="UpgradeDatabase.Text" xml:space="preserve">
    <value>Mise à jour de la base de données</value>
  </data>
  <data name="UpgradeDatabaseInProgress.Text" xml:space="preserve">
    <value>Mise à jour de la base de données en cours...</value>
  </data>
  <data name="UpgradeFailed.Text" xml:space="preserve">
    <value>La mise à jour a échoué</value>
  </data>
  <data name="UpgradeYourDatabase.Text" xml:space="preserve">
    <value>Mettez à jour votre base de données</value>
  </data>
  <data name="Version.Text" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="FileException.Text" xml:space="preserve">
    <value>Vérifiez les fichiers de la base de données</value>
  </data>
  <data name="FileBackedUp.Text" xml:space="preserve">
    <value>Le fichier {0} a été créé</value>
  </data>
</root>